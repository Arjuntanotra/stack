#include <bits/stdc++.h> 
class NStack
{
    int *arr ;
    int *next ;
    int *top ;
    int top_size , arr_Size;
    int free_index;
public:
    // Initialize your data structure.
    NStack(int N, int S)
    {
        top_size = N;
        arr_Size = S;

        arr = new int[arr_Size];
        next = new int[arr_Size];
        top = new int[top_size];

        for (int i = 0 ; i< top_size ; i++){
            top[i] = -1;
        }

        for (int i = 0 ; i<arr_Size ; i++){
                next[i] = i+1;
        }

        next[arr_Size-1] = -1;

        free_index = 0;
       
    }

    // Pushes 'X' into the Mth stack. Returns true if it gets pushed into the stack, and false otherwise.
    bool push(int x, int m)
    {
         if(free_index == -1){
             return false;
         }

         int index = free_index;
         
         free_index = next[index];

         arr[index] = x;

         next[index] = top[m-1];

         top[m-1] = index;

         return true;
    }

    // Pops top element from Mth Stack. Returns -1 if the stack is empty, otherwise returns the popped element.
    int pop(int m)
    {
        // Write your code here.

        if(top[m-1] == -1)
             return  -1;

             int index = top[m-1];

             top[m-1] = next[index];

             next[index] = free_index;

             free_index = index;

             return arr[index];
    }
};
